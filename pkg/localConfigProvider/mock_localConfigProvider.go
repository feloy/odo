// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/localConfigProvider/localConfigProvider.go

// Package localConfigProvider is a generated GoMock package.
package localConfigProvider

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLocalConfigProvider is a mock of LocalConfigProvider interface.
type MockLocalConfigProvider struct {
	ctrl     *gomock.Controller
	recorder *MockLocalConfigProviderMockRecorder
}

// MockLocalConfigProviderMockRecorder is the mock recorder for MockLocalConfigProvider.
type MockLocalConfigProviderMockRecorder struct {
	mock *MockLocalConfigProvider
}

// NewMockLocalConfigProvider creates a new mock instance.
func NewMockLocalConfigProvider(ctrl *gomock.Controller) *MockLocalConfigProvider {
	mock := &MockLocalConfigProvider{ctrl: ctrl}
	mock.recorder = &MockLocalConfigProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLocalConfigProvider) EXPECT() *MockLocalConfigProviderMockRecorder {
	return m.recorder
}

// ListStorage mocks base method.
func (m *MockLocalConfigProvider) ListStorage() ([]LocalStorage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListStorage")
	ret0, _ := ret[0].([]LocalStorage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListStorage indicates an expected call of ListStorage.
func (mr *MockLocalConfigProviderMockRecorder) ListStorage() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListStorage", reflect.TypeOf((*MockLocalConfigProvider)(nil).ListStorage))
}
