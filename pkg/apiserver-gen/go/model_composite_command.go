/*
 * odo dev
 *
 * API interface for 'odo dev'
 *
 * API version: 0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type CompositeCommand struct {
	Commands []string `json:"commands,omitempty"`

	Parallel bool `json:"parallel,omitempty"`
}

// AssertCompositeCommandRequired checks if the required fields are not zero-ed
func AssertCompositeCommandRequired(obj CompositeCommand) error {
	return nil
}

// AssertRecurseCompositeCommandRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of CompositeCommand (e.g. [][]CompositeCommand), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseCompositeCommandRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCompositeCommand, ok := obj.(CompositeCommand)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertCompositeCommandRequired(aCompositeCommand)
	})
}
