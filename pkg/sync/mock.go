// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/sync/sync.go

// Package sync is a generated GoMock package.
package sync

import (
	io "io"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSyncExtracter is a mock of SyncExtracter interface.
type MockSyncExtracter struct {
	ctrl     *gomock.Controller
	recorder *MockSyncExtracterMockRecorder
}

// MockSyncExtracterMockRecorder is the mock recorder for MockSyncExtracter.
type MockSyncExtracterMockRecorder struct {
	mock *MockSyncExtracter
}

// NewMockSyncExtracter creates a new mock instance.
func NewMockSyncExtracter(ctrl *gomock.Controller) *MockSyncExtracter {
	mock := &MockSyncExtracter{ctrl: ctrl}
	mock.recorder = &MockSyncExtracterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSyncExtracter) EXPECT() *MockSyncExtracterMockRecorder {
	return m.recorder
}

// ExtractProjectToComponent mocks base method.
func (m *MockSyncExtracter) ExtractProjectToComponent(arg0 ComponentInfo, arg1 string, arg2 io.Reader) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExtractProjectToComponent", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// ExtractProjectToComponent indicates an expected call of ExtractProjectToComponent.
func (mr *MockSyncExtracterMockRecorder) ExtractProjectToComponent(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExtractProjectToComponent", reflect.TypeOf((*MockSyncExtracter)(nil).ExtractProjectToComponent), arg0, arg1, arg2)
}
