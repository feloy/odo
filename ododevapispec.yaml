openapi: '3.0.2'
info:
  title: odo dev
  version: '0.1'
  description: API interface for 'odo dev'
servers:
  - url: /api/v1
paths:
  /instance:
    get:
      description: Get information about the this 'odo dev' instance.
      responses:
        '200':
          description: Information about the this 'odo dev' instance.
          content:
            application/json:
              schema:
                type: object
                properties:
                  componentDirectory:
                    type: string
                    description: Directory on which this 'odo dev' instance is running
                  pid:
                    type: integer
                    description: PID of the this 'odo dev' instance.
              example:
                componentDirectory: "/Users/user/Documents/myproject"
                pid: 42

    delete:
      description: "Stop this 'odo dev' instance"
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSuccess'
              example:
                message: "'odo dev' instance with pid: 42 is shuting down."
          description: "'odo dev' instance will shutdown."

  /component:
    get:
      description: Get the Information about the component controlled by this 'odo dev' instance.
      responses:
        '200':
          description: Information about the component.
          content:
            application/json:
              schema:
                type: object
                properties:
                  component:
                    type: object
                    description: Description of the component. This is the same as output of 'odo describe component -o json'
              example:
                {
                  "devfilePath": "/home/tomas/Code/odo-examples/java-maven/devfile.yaml",
                  "devfileData": {
                          "devfile": {
                                  "schemaVersion": "2.1.0",
                                  "metadata": {
                                          "name": "demo",
                                          "version": "1.1.1",
                                          "displayName": "Maven Java",
                                          "description": "Upstream Maven and OpenJDK 11",
                                          "tags": [
                                                  "Java",
                                                  "Maven"
                                          ],
                                          "icon": "https://raw.githubusercontent.com/devfile-samples/devfile-stack-icons/main/java-maven.jpg",
                                          "projectType": "Maven",
                                          "language": "Java"
                                  },
                                  "components": [
                                          {
                                                  "name": "tools",
                                                  "container": {
                                                          "image": "quay.io/eclipse/che-java11-maven:next",
                                                          "env": [
                                                                  {
                                                                          "name": "DEBUG_PORT",
                                                                          "value": "5858"
                                                                  }
                                                          ],
                                                          "volumeMounts": [
                                                                  {
                                                                          "name": "m2",
                                                                          "path": "/home/user/.m2"
                                                                  }
                                                          ],
                                                          "memoryLimit": "512Mi",
                                                          "mountSources": true,
                                                          "dedicatedPod": false,
                                                          "endpoints": [
                                                                  {
                                                                          "name": "http-maven",
                                                                          "targetPort": 8080,
                                                                          "secure": false
                                                                  }
                                                          ]
                                                  }
                                          },
                                          {
                                                  "name": "m2",
                                                  "volume": {
                                                          "ephemeral": false
                                                  }
                                          }
                                  ],
                                  "starterProjects": [
                                          {
                                                  "name": "springbootproject",
                                                  "git": {
                                                          "remotes": {
                                                                  "origin": "https://github.com/odo-devfiles/springboot-ex.git"
                                                          }
                                                  }
                                          }
                                  ],
                                  "commands": [
                                          {
                                                  "id": "mvn-package",
                                                  "exec": {
                                                          "group": {
                                                                  "kind": "build",
                                                                  "isDefault": true
                                                          },
                                                          "commandLine": "mvn -Dmaven.repo.local=/home/user/.m2/repository package",
                                                          "component": "tools",
                                                          "workingDir": "${PROJECT_SOURCE}",
                                                          "hotReloadCapable": false
                                                  }
                                          },
                                          {
                                                  "id": "run",
                                                  "exec": {
                                                          "group": {
                                                                  "kind": "run",
                                                                  "isDefault": true
                                                          },
                                                          "commandLine": "java -jar target/*.jar",
                                                          "component": "tools",
                                                          "workingDir": "${PROJECT_SOURCE}",
                                                          "hotReloadCapable": false
                                                  }
                                          },
                                          {
                                                  "id": "debug",
                                                  "exec": {
                                                          "group": {
                                                                  "kind": "debug",
                                                                  "isDefault": true
                                                          },
                                                          "commandLine": "java -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=${DEBUG_PORT},suspend=n -jar target/*.jar",
                                                          "component": "tools",
                                                          "workingDir": "${PROJECT_SOURCE}",
                                                          "hotReloadCapable": false
                                                  }
                                          }
                                  ]
                          },
                          "supportedOdoFeatures": {
                                  "dev": true,
                                  "deploy": false,
                                  "debug": true
                          }
                  },
                  "runningIn": {
                          "deploy": false,
                          "dev": true
                  },
                  "managedBy": "odo"
               }
        '500':
          description: error getting the description of the component
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
              example:
                message: "error getting the description of the component"

  /component/command:
    post:
      description: Instruct 'odo dev' to perform given command on the component
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Name of the command that should be executed
                  type: string
                  enum:
                    - "push"
              example:
                name: push
      responses:
        '200':
          description: command was successfully executed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSuccess'
              example:
                message: "push was successfully executed"
        '400':
          description: command name not supported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
              example:
                message: "command name 'unknown' not supported. Supported values are: \"push\""
        '429':
          description: a push operation is not possible at this time. Please retry later
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
              example:
                message: "a push operation is not possible at this time. Please retry later"

  /devstate/metadata:
    put:
      description: Updates the metadata for the Devfile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                version:
                  type: string
                displayName:
                  type: string
                description:
                  type: string
                tags:
                  type: string
                architectures:
                  type: string
                icon:
                  type: string
                globalMemoryLimit:
                  type: string
                projectType:
                  type: string
                language:
                  type: string
                website:
                  type: string
                provider:
                  type: string
                supportUrl:
                  type: string
      responses:
        '200':
          description: metadata was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevfileContent'
              example:
                {
                    "Content": "schemaVersion: 2.2.0\n",
                    "Commands": [],
                    "Containers": [],
                    "Images": [],
                    "Resources": [],
                    "Events": {
                        "PreStart": null,
                        "PostStart": null,
                        "PreStop": null,
                        "PostStop": null
                    },
                    "Metadata": {
                        "Name": "",
                        "Version": "",
                        "DisplayName": "",
                        "Description": "",
                        "Tags": "",
                        "Architectures": "",
                        "Icon": "",
                        "GlobalMemoryLimit": "",
                        "ProjectType": "",
                        "Language": "",
                        "Website": "",
                        "Provider": "",
                        "SupportUrl": ""
                    }
                }
        '500':
          description: Error updating the metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
              example:
                message: "Error updating the metadata"

  /devstate/container:
    post:
      description: Add a new container to the Devfile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Name of the container
                  type: string
                image: 
                  description: Container image
                  type: string
                command: 
                  description: Entrypoint of the container
                  type: array
                  items: {
                        type: string
                  }
                args: 
                  description: Args passed to the Container entrypoint
                  type: array
                  items: {
                        type: string
                  }
                memReq: 
                  description: Requested memory for the deployed container
                  type: string
                memLimit:
                  description: Memory limit for the deployed container
                  type: string
                cpuReq:
                  description: Requested CPU for the deployed container
                  type: string
                cpuLimit:
                  description: CPU limit for the deployed container
                  type: string
      responses:
        '200':
          description: container was successfully added to the devfile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevfileContent'
              example:
                {
                    "Content": "schemaVersion: 2.2.0\n",
                    "Commands": [],
                    "Containers": [],
                    "Images": [],
                    "Resources": [],
                    "Events": {
                        "PreStart": null,
                        "PostStart": null,
                        "PreStop": null,
                        "PostStop": null
                    },
                    "Metadata": {
                        "Name": "",
                        "Version": "",
                        "DisplayName": "",
                        "Description": "",
                        "Tags": "",
                        "Architectures": "",
                        "Icon": "",
                        "GlobalMemoryLimit": "",
                        "ProjectType": "",
                        "Language": "",
                        "Website": "",
                        "Provider": "",
                        "SupportUrl": ""
                    }
                }
        '500':
          description: Error adding the container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
              example:
                message: "Error adding the container"

  /devstate/container/{containerName}:
    delete:
      description: "Delete a container from the Devfile"
      parameters:
        - name: containerName
          in: path
          description: Container name to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSuccess'
              example:
                message: "Container has been deleted"
          description: "Container has been deleted"
        '500':
          description: Error deleting the container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
              example:
                message: "Error deleting the container"

  /devstate/image:
    post:
      description: Add a new image to the Devfile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Name of the image
                  type: string
                imageName:
                  type: string
                args:
                  type: array
                  items: {
                    type: string
                  }
                buildContext:
                  type: string
                rootRequired:
                  type: bool
                uri:
                  type: string
      responses:
        '200':
          description: image was successfully added to the devfile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevfileContent'
              example:
                {
                    "Content": "schemaVersion: 2.2.0\n",
                    "Commands": [],
                    "Containers": [],
                    "Images": [],
                    "Resources": [],
                    "Events": {
                        "PreStart": null,
                        "PostStart": null,
                        "PreStop": null,
                        "PostStop": null
                    },
                    "Metadata": {
                        "Name": "",
                        "Version": "",
                        "DisplayName": "",
                        "Description": "",
                        "Tags": "",
                        "Architectures": "",
                        "Icon": "",
                        "GlobalMemoryLimit": "",
                        "ProjectType": "",
                        "Language": "",
                        "Website": "",
                        "Provider": "",
                        "SupportUrl": ""
                    }
                }
        '500':
          description: Error adding the image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
              example:
                message: "Error adding the image"

  /devstate/image/{imageName}:
    delete:
      description: "Delete an image from the Devfile"
      parameters:
        - name: imageName
          in: path
          description: Image name to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSuccess'
              example:
                message: "Image has been deleted"
          description: "Image has been deleted"
        '500':
          description: Error deleting the image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
              example:
                message: "Error deleting the image"

  /devstate/resource:
    post:
      description: Add a new Kubernetes resource to the Devfile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Name of the resource
                  type: string
                inlined:
                  type: string
                uri:
                  type: string
      responses:
        '200':
          description: resource was successfully added to the devfile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevfileContent'
              example:
                {
                    "Content": "schemaVersion: 2.2.0\n",
                    "Commands": [],
                    "Containers": [],
                    "Images": [],
                    "Resources": [],
                    "Events": {
                        "PreStart": null,
                        "PostStart": null,
                        "PreStop": null,
                        "PostStop": null
                    },
                    "Metadata": {
                        "Name": "",
                        "Version": "",
                        "DisplayName": "",
                        "Description": "",
                        "Tags": "",
                        "Architectures": "",
                        "Icon": "",
                        "GlobalMemoryLimit": "",
                        "ProjectType": "",
                        "Language": "",
                        "Website": "",
                        "Provider": "",
                        "SupportUrl": ""
                    }
                }
        '500':
          description: Error adding the resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
              example:
                message: "Error adding the resource"

  /devstate/resource/{resourceName}:
    delete:
      description: "Delete a resource from the Devfile"
      parameters:
        - name: resourceName
          in: path
          description: Resource name to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSuccess'
              example:
                message: "Resource has been deleted"
          description: "Resource has been deleted"
        '500':
          description: Error deleting the resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
              example:
                message: "Error deleting the resource"

  /devstate/applyCommand:
    post:
      description: Add a new Apply Command to the Devfile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Name of the command
                  type: string
                component:
                  type: string
      responses:
        '200':
          description: Apply command was successfully added to the devfile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevfileContent'
              example:
                {
                    "Content": "schemaVersion: 2.2.0\n",
                    "Commands": [],
                    "Containers": [],
                    "Images": [],
                    "Resources": [],
                    "Events": {
                        "PreStart": null,
                        "PostStart": null,
                        "PreStop": null,
                        "PostStop": null
                    },
                    "Metadata": {
                        "Name": "",
                        "Version": "",
                        "DisplayName": "",
                        "Description": "",
                        "Tags": "",
                        "Architectures": "",
                        "Icon": "",
                        "GlobalMemoryLimit": "",
                        "ProjectType": "",
                        "Language": "",
                        "Website": "",
                        "Provider": "",
                        "SupportUrl": ""
                    }
                }
        '500':
          description: Error adding the Apply command
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
              example:
                message: "Error adding the Apply command"

  /devstate/command/{commandName}:
    delete:
      description: "Delete a command from the Devfile"
      parameters:
        - name: commandName
          in: path
          description: Command name to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSuccess'
              example:
                message: "Command has been deleted"
          description: "Command has been deleted"
        '500':
          description: Error deleting the command
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
              example:
                message: "Error deleting the command"

  /devstate/command/{commandName}/move:
    post:
      description: "Move a command"
      parameters:
        - name: commandName
          in: path
          description: Command name to delete
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fromGroup:
                  description: Initial group of the command
                  type: string
                fromIndex:
                  description: Initial index of the command in the group
                  type: integer
                toGroup:
                  description: Target group of the command
                  type: string
                toIndex:
                  description: Target index of the command in the group
                  type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSuccess'
              example:
                message: "Command has been moved to group NewGroup position 4"
          description: "Command has been moved"
        '500':
          description: Error moving the command
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
              example:
                message: "Error moving the command to group NewGroup position 4"


  /devstate/compositeCommand:
    post:
      description: Add a new Composite Command to the Devfile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Name of the command
                  type: string
                parallel:
                  type: bool
                commands:
                  type: array
                  items: {
                    type: string
                  }
      responses:
        '200':
          description: Composite command was successfully added to the devfile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevfileContent'
              example:
                {
                    "Content": "schemaVersion: 2.2.0\n",
                    "Commands": [],
                    "Containers": [],
                    "Images": [],
                    "Resources": [],
                    "Events": {
                        "PreStart": null,
                        "PostStart": null,
                        "PreStop": null,
                        "PostStop": null
                    },
                    "Metadata": {
                        "Name": "",
                        "Version": "",
                        "DisplayName": "",
                        "Description": "",
                        "Tags": "",
                        "Architectures": "",
                        "Icon": "",
                        "GlobalMemoryLimit": "",
                        "ProjectType": "",
                        "Language": "",
                        "Website": "",
                        "Provider": "",
                        "SupportUrl": ""
                    }
                }
        '500':
          description: Error adding the Composite command
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
              example:
                message: "Error adding the Composite command"

  /devstate/execCommand:
    post:
      description: Add a new Exec Command to the Devfile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Name of the command
                  type: string
                component:
                  type: string
                commandLine:
                  type: string
                workingDir:
                  type: string
                hotReloadCapable:
                  type: bool
      responses:
        '200':
          description: Exec command was successfully added to the devfile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevfileContent'
              example:
                {
                    "Content": "schemaVersion: 2.2.0\n",
                    "Commands": [],
                    "Containers": [],
                    "Images": [],
                    "Resources": [],
                    "Events": {
                        "PreStart": null,
                        "PostStart": null,
                        "PreStop": null,
                        "PostStop": null
                    },
                    "Metadata": {
                        "Name": "",
                        "Version": "",
                        "DisplayName": "",
                        "Description": "",
                        "Tags": "",
                        "Architectures": "",
                        "Icon": "",
                        "GlobalMemoryLimit": "",
                        "ProjectType": "",
                        "Language": "",
                        "Website": "",
                        "Provider": "",
                        "SupportUrl": ""
                    }
                }
        '500':
          description: Error adding the Exec command
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
              example:
                message: "Error adding the Exec command"

  /devstate/chart:
    get:
      description: Get chart representing the Devfile cycle in mermaid format
      responses:
        '200':
          description: Chart representing the Devfile cycle
          content:
            application/json:
              schema:
                type: object
                properties:
                  chart:
                    type: string
                    description: chart in mermaid format

components:
  schemas:
    GeneralSuccess:
      type: object
      properties:
        message:
          type: string
    GeneralError:
      type: object
      properties:
        message:
          type: string
    DevfileContent:
      type: object
      properties:
        component:
          type: object
          description: Content of the Devfile
